<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chapeauLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>